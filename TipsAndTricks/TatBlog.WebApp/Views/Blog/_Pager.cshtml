@model IPagedList<Post>

@{
  var postQuery = (ViewData["PostQuery"] as PostQuery) ?? new PostQuery();
  var actionName = "Index";
  var slug = "";
  var pagedList = Model as PagedList<Post>;

  if (!string.IsNullOrWhiteSpace(postQuery.AuthorSlug))
  {
    actionName = "Author";
  }
  else if (!string.IsNullOrWhiteSpace(postQuery.TagSlug))
  {
    actionName = "Tag";
  }
  else if (!string.IsNullOrWhiteSpace(postQuery.CategorySlug))
  {
    actionName = "Category";
  }
}

@{
    if (pagedList.IsFirstPage) return;

    if (!pagedList.IsLastPage) 
      pagedList.PageNumber = pagedList.TotalItemCount;

    // Các trang hiện thị trong điều hướng
    List<int> pagesRanges = new List<int>();    

    int delta      = 5;             // Số trang mở rộng về mỗi bên trang hiện tại     
    int remain     = delta * 2;     // Số trang hai bên trang hiện tại

    pagesRanges.Add(pagedList.PageNumber);
    // Các trang phát triển về hai bên trang hiện tại
    for (int i = 1; i <= delta; i++)
    {
        if (pagedList.PageNumber + i  <= pagedList.TotalItemCount) {
            pagesRanges.Add(pagedList.PageNumber + i); 
            remain --;
        }
               
        if (pagedList.PageNumber - i >= 1) {
            pagesRanges.Insert(0, pagedList.PageNumber - i);
            remain --;
        }
            
    }    
    // Xử lý thêm vào các trang cho đủ remain 
    //(xảy ra ở đầu mút của khoảng trang không đủ trang chèn  vào)
    if (remain > 0) {
        if (pagesRanges[0] == 1) {
            for (int i = 1; i <= remain; i++)
            {
                if (pagesRanges.Last() + 1 <= pagedList.TotalItemCount) {
                    pagesRanges.Add(pagesRanges.Last() + 1);
                }
            }
        }
        else {
            for (int i = 1; i <= remain; i++)
            {
                if (pagesRanges.First() - 1 > 1) {
                    pagesRanges.Insert(0, pagesRanges.First() - 1);
                }
            }
        }
    }
}

@* PHÁT SINH HTML*@

<ul class="pagination">
    <!-- Previous page link -->
    @if (pagedList.HasPreviousPage)
    {
      <li class="page-item">
        <a class="page-link"
          asp-controller="Blog"
          asp-action="@actionName"
          asp-route-slug="@slug"
          asp-route-k="@postQuery.Keyword"
          asp-route-p="@(pagedList.PageNumber - 1)"
          asp-route-ps="@pagedList.PageSize">
          Trang trước
        </a>
      </li>
    }
    else
    {
      <li class="page-item disabled">
          <a class="page-link" href="#" tabindex="-1" aria-disabled="true">Trang trước</a>
      </li>
    }
      
    <!-- Numbered page links -->
    @foreach (var pageitem in pagesRanges)
    {
        if (pageitem != pagedList.PageNumber) {
            <li class="page-item">
              <a class="page-link"
                asp-controller="Blog"
                asp-action="@actionName"
                asp-route-slug="@slug"
                asp-route-k="@postQuery.Keyword"
                asp-route-p="@pageitem"
                asp-route-ps="@pagedList.PageSize">
                @pageitem
              </a>
            </li>
        }   
        else 
        {
            <li class="page-item active" aria-current="page">
                <a class="page-link" href="#">@pageitem</a>
            </li>
        }
    }

    <!-- Next page link -->
    @if (pagedList.HasNextPage)
    {
      <li class="page-item">
        <a class="page-link"
          asp-controller="Blog"
          asp-action="@actionName"
          asp-route-slug="@slug"
          asp-route-k="@postQuery.Keyword"
          asp-route-p="@(pagedList.PageNumber + 1)"
          asp-route-ps="@pagedList.PageSize">
          Trang sau
        </a>
      </li>
    }
    else
    {
      <li class="page-item disabled">
        <a class="page-link" href="#" tabindex="-1" aria-disabled="true">Trang sau</a>
      </li>
    }
</ul>